# GENERAL BITS AND BOBS
unbind -T root -aq
unbind -T prefix -aq
unbind -T nested -aq
unbind -T popup -aq
unbind -T copy-mode -aq

#source-file ~/.config/tmux/tmux.reset.conf
set -g default-terminal "tmux-256color"
set -ag terminal-overrides ",xterm-256color:RGB"

# Reload tmux file
bind r source-file ~/.config/tmux/tmux.conf;  display-message -d 2000 "Configuration reloaded!"


unbind C-b
set -g prefix C-a
bind-key C-a send-prefix

# Create vertical split
bind '|' split-window -h -c "#{pane_current_path}"

# Create horizontal split
bind - split-window -v -c "#{pane_current_path}"


# create a new windows with spcific name
bind c new-window -c "$HOME"

# enable mouse in tmux
set -g mouse on

# Status bar at bottom
set -g status-position bottom

# how to navigate across the different panes in a window
# Notice I'm using vim motions
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Switch to windows 1 through 4
# 'p' is normally used to go to the previous window, but I won't use it
# ctrl+b c -> new window
# ctrl+b , -> rename current window
# ctrl+b w -> show list of windows and sessions
bind u select-window -t 1
bind i select-window -t 2
bind o select-window -t 3
bind p select-window -t 4


# Switch to sessions 1 through 4
# ctrl+b : -> new -s 0 -> new session with name '0'
# ctrl+b $ -> rename current session
# ctrl+b s -> show list of sessions
bind 7 switch-client -t 1
bind 8 switch-client -t 2
bind 9 switch-client -t 3
bind 0 switch-client -t 4

# New windows normally start at 0, but I want them to start at 1 instead
set -g base-index 1

# Imagine if you have windows 1-5, and you close window 3, you are left with
# 1,2,4,5, which is inconvenient for my navigation method seen below
# renumbering solves that issue, so if you close 3 youre left with 1-4
set -g renumber-windows on

# Resize pane with bind + mayus key
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5
bind -r H resize-pane -L 5

# same as zen mode
bind -r z resize-pane -Z

# Jump to beginning of the line :FIX review this later
bind a send-prefix

# Bind pane synchronization to Ctrl-b s :FIX review the
bind y setw synchronize-panes

# remove delay for exiting insert mode with ESC in Neovim
set -sg escape-time 10

# rename session and window
bind . command-prompt -I "rename-session "
bind , command-prompt -I "rename-window "

# Alternate session
# Switch between the last 2 tmux sessions, similar to 'cd -' in the terminal
# I use this in combination with the `choose-tree` to sort sessions by time
# Otherwise, by default, sessions are sorted by name, and that makes no sense
# -l stands for `last session`, see `man tmux`
bind-key Space switch-client -l

# When pressing prefix+s to list sessions, I want them sorted by time
# That way my latest used sessions show at the top of the list
# -s starts with sessions collapsed (doesn't show windows)
# -Z zooms the pane (don't uderstand what this does)
# -O specifies the initial sort field: one of ‘index’, ‘name’, or ‘time’ (activity).
# https://unix.stackexchange.com/questions/608268/how-can-i-force-tmux-to-sort-my-sessions-alphabetically
bind s choose-tree -Zs -O time

# This enables vim nagivation
# If for example I'm in the scrolling mode (yellow) can navigate with vim motions
# search with /, using v for visual mode, etc
set-window-option -g mode-keys vi

# https://github.com/leelavg/dotfiles/blob/897aa883a/config/tmux.conf#L30-L39
# https://scripter.co/command-to-every-pane-window-session-in-tmux/
# Send the same command to all panes/windows in current session
bind x command-prompt -p "Command:" \
  "run \"tmux list-panes -s -F '##{session_name}:##{window_index}.##{pane_index}' \
                | xargs -I PANE tmux send-keys -t PANE '%1' Enter\""

# Send the same command to all panes/windows/sessions
bind X command-prompt -p "Command:" \
  "run \"tmux list-panes -a -F '##{session_name}:##{window_index}.##{pane_index}' \
              | xargs -I PANE tmux send-keys -t PANE '%1' Enter\""

# Increase scroll history
set-option -g history-limit 10000

# Set the repeat time to a lower value (in milliseconds)
set-option -g repeat-time 1000

# Remove delay after escape key press
set -s escape-time 0

# Enables tracking of focus events, allows tmux to respond when the terminal
# window gains or looses focus
set-option -g focus-events on

# kill pane
bind q confirm-before -p "kill-pane #P? (y/n)" kill-pane

# dettach
bind D detach
bind : command-prompt

# mute windows sound and monitoring activity
bind B {
  set -w monitor-bell
  set -w monitor-activity
  display 'window mute #{?#{monitor-bell},off,on}'
}

# clear screen while command is running
bind C send-keys -R Enter
# bind S {
#   send-keys -R Enter
#   clear-history
# }

# move between and swap them
bind n next-window
bind N swap-window -d -t '{next}'
bind m previous-window
bind M swap-window -d -t '{previous}'

#
bind ] {
  select-pane -m
  display 'pane marked: #{pane_id}, <prefix>V or <prefix>H'
}
bind [ break-pane -a -t '{next}'

# Prompted join-pane
bind-key P command-prompt -p "join pane from: "  "join-pane -v -s '%%'"

# change layout
bind Tab next-layout

# rotate windows
bind w rotate-window

# COPY MODE :FIX review this
# bind -n C-o copy-mode
# bind -n M-p paste-buffer -p
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-selection


# # STATUSBAR
# set -g status-interval 60
#
# set -g status-left-length 100
# set -g status-right-length 100
#
# set -g status-style bg=default
# set -g status-left-style fg=colour0,bg=colour$HOST_COLOR
# set -g status-left '#[bold]#{?#{N/s:_popup_#S},+, }#S #[nobold]│ #h │ %H:%M '
# set -g status-right-style fg=colour250
# set -g status-right '#[reverse] #(cat /proc/loadavg) '
#
# # WINDOW INDICATORS
# set -g window-status-separator ''
# set -g window-status-format ' #I#{?#{window_zoomed_flag},+,}-> #W |'
# set -g window-status-style fg=colour245,bg=default
# set -g window-status-activity-style fg=colour$HOST_COLOR,bg=default,bold
# set -g window-status-bell-style fg=colour0,bg=colour$HOST_COLOR,bold
# set -g window-status-current-format ' #I#{?#{window_zoomed_flag},+,}-> #W |'
# set -g window-status-current-style fg=colour231,bg=colour240,bold
#
# # MESSAGES
# set -g message-style fg=colour232,bg=colour$HOST_COLOR,bold
#
# # PANE SPLITS
# set -g pane-border-style fg=colour238
# set -g pane-active-border-style fg=colour252
#
# # CLOCK AND COPY INDICATOR
# set -g clock-mode-colour colour$HOST_COLOR
# set -g mode-style fg=colour$HOST_COLOR,bg=colour235,bold
#
# # ACTIVITY
# set -g bell-action none
# set -g monitor-activity on
# set -g monitor-bell on
# set -g visual-activity off
# set -g visual-bell on
# set -g visual-silence off


##########
# run
# git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm

#########

# tpm plugin
# Press prefix + I (capital i, as in Install) to fetch the plugin.
set -g @tpm-clean 'I' # all
set -g @plugin 'tmux-plugins/tpm'
#
# list of tmux plugins
# set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'tmux-plugins/tmux-resurrect' # persist tmux sessions after computer restart
set -g @plugin 'tmux-plugins/tmux-continuum' # automatically saves sessions for you every 15 minutes
# set -g @plugin 'fabioluciano/tmux-tokyo-night'
#
#
set -g @resurrect-capture-pane-contents 'on'
set -g @continuum-restore 'on'
#
# # Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
