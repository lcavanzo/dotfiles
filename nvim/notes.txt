hbuffers
te -- create new tab

telescope(search files)
;f -- find files
sf -- file browser
when the file browser is open, to create a file new file you can press shift+n

lspsaga
'<C-j>', '<Cmd>Lspsaga diagnostic_jump_next<CR>', opts)
'K', '<Cmd>Lspsaga hover_doc<CR>', opts)
'gd', '<Cmd>Lspsaga lsp_finder<CR>', opts)
'<C-k>', '<Cmd>Lspsaga signature_help<CR>', opts)
'gp', '<Cmd>Lspsaga preview_definition<CR>', opts)
'gr', '<Cmd>Lspsaga rename<CR>', opts) <- great

-- New tab
 keymap.set('n', 'te', ':tabedit<Return>', {silent = true})

 -- Split window
 keymap.set('n', 'sp', ':split<Return><C-w>w', {silent = true})
 keymap.set('n', 'sv', ':vsplit<Return><C-w>w', {silent = true})
 -- Move window
 keymap.set('n', '<Space>', '<C-w>w')
 keymap.set('', 'sh', '<C-w>h')
 keymap.set('', 'sk', '<C-w>k')
 keymap.set('', 'sj', '<C-w>j')
 keymap.set('', 'sl', '<C-w>l')

  9 keymap('i', 'jj', '<ESC>', opts)↵
 10 ↵
 11 -- Clear search highlight↵
 12 keymap('n', '<leader>l', ':noh<return><esc>', opts)↵
 13 ↵
 14 -- Quick save command↵
 15 keymap('n', '<leader>s', ':write<CR>', opts)↵
 16 ↵
 17 -- Quick refresh the currenlty file↵
 18 keymap('n', '<leader>e', ':edit<CR>', opts)↵
 19 ↵
 20 -- Quick quit command↵
 21 keymap('n', '<leader>q', ':quit<CR>', opts)↵
 22 keymap('n', '<leader>Q', ':qa!<CR>', opts)↵
 23 ↵
 24 -- Buffers↵
 25 keymap('n', '<leader>m', ':bnext<CR>', opts)↵
 26 keymap('n', '<leader>n', ':bprevious<CR>', opts)↵
 27 keymap('n', '<leader>x', ':bdelete<CR>', opts)↵
 28 ↵
 29 -- Vim Tabs↵
 30 keymap('n', '<leader>t', ':tabnew<CR>', opts)↵
 31 keymap('n', '<leader>c', ':tabclose<CR>', opts)↵
 32 keymap('n', '<leader>r', ':tabnext<CR>', opts)↵
 33 keymap('n', '<leader>y', ':tabprevious<CR>', opts)↵
 34 ↵
 35 -- togle listchar display↵
 36 keymap('n', '<leader>d', ':setinvlist<CR>', opts)↵

 keymap('i', 'jj', '<ESC>', opts)↵

 -- Clear search highlight↵
 keymap('n', '<leader>l', ':noh<return><esc>', opts)↵

 -- Quick save command↵
 keymap('n', '<leader>s', ':write<CR>', opts)↵

 -- Quick refresh the currenlty file↵
 keymap('n', '<leader>e', ':edit<CR>', opts)↵

 -- Quick quit command↵
 keymap('n', '<leader>q', ':quit<CR>', opts)↵
 keymap('n', '<leader>Q', ':qa!<CR>', opts)↵

 -- Buffers↵
 keymap('n', '<leader>m', ':bnext<CR>', opts)↵
 keymap('n', '<leader>n', ':bprevious<CR>', opts)↵
 keymap('n', '<leader>x', ':bdelete<CR>', opts)↵

 -- Vim Tabs↵
 keymap('n', '<leader>t', ':tabnew<CR>', opts)↵
 keymap('n', '<leader>c', ':tabclose<CR>', opts)↵
 keymap('n', '<leader>r', ':tabnext<CR>', opts)↵
 keymap('n', '<leader>y', ':tabprevious<CR>', opts)↵

 -- togle listchar display↵
 keymap('n', '<leader>d', ':setinvlist<CR>', opts)↵

How to install icons for neovim
1. Download and install the font(I prefer Hack Nerd Font from nerdfonts)
link : https://github.com/ryanoasis/nerd-fonts/releases/download/v2.2.2/FiraMono.zip

2. Download the patch for the fonts 
Patch Your Own Font - step No 8 in the next link- https://github.com/ryanoasis/nerd-fonts#combinations
Not patch the fonts downloaded in step 1
root@pc:$ fontforge --script font-patcher ../Hack/Hack\ Regular\ Nerd\ Font\ Complete\ Mono.ttf

3. The resulted file we need to move to the correct location in fonts
for macos is ~/Library/Fonts/

4. Next. we load the file in the terminal settings, in iterm2 is in preferences, profile, text

